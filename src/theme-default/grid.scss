$grid-columns: 12;
@mixin make-grid-columns($i: 1, $list: ".col-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$i}";
  }

  #{$list} {
    position: relative;
  }
}

@mixin float-grid-columns($i: 1, $list: ".col-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$i}";
  }

  #{$list} {
    float: left;
  }
}

@mixin loop-grid-columns($columns, $type) {
  @for $i from 0 through $columns {

    @if ($type==width) and ($i > 0) {
      .col-#{$i} {
        width: percentage(($i / $grid-columns));
      }
    }

    @if ($type==left) and ($i > 0) {
      .col-left-#{$i} {
        left: percentage(($i / $grid-columns));
      }
    }

    @if ($type==left) and ($i==0) {
      .col-left-0 {
        left: auto;
      }
    }

    @if ($type==right) and ($i > 0) {
      .col-right-#{$i} {
        right: percentage(($i / $grid-columns));
      }
    }

    @if ($type==right) and ($i==0) {
      .col-right-0 {
        right: auto;
      }
    }

    @if ($type==offset) {
      .col-offset-#{$i} {
        margin-left: percentage(($i / $grid-columns));
      }
    }
  }
}


// default
@include make-grid-columns;
@include float-grid-columns;
@include loop-grid-columns($grid-columns, width);
@include loop-grid-columns($grid-columns, right);
@include loop-grid-columns($grid-columns, left);
@include loop-grid-columns($grid-columns, offset);

.row {
  &::after {
    content: "";
    display: block;
    clear: both;
  }
}